@model StaffandTrain.Models.EmailTemplate
@{
    /**/

    /**/

    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@*<script src="~/ckeditor/ckeditor.js"></script>*@
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.11.0/umd/popper.min.js" defer></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta/js/bootstrap.min.js" defer></script>
<link href="https://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.9/summernote-bs4.css" rel="stylesheet">
<script src="https://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.8/summernote-bs4.js" defer></script>
<script src="~/Custom_JS/SendEmail_Index.js" defer></script>

<style>
    .note-popover .popover-content .dropdown-menu, .card-header.note-toolbar .dropdown-menu {
        min-width: 41px !important;
    }

    .note-editable u, .note-editable ul {
        text-decoration: underline !important;
    }
    .accordion {
        padding: 0 9px 0 21px;
    }
    .accordion-header {
        cursor: pointer;
        padding: 10px;
        background-color: #f0f0f0;
        border: 1px solid #ccc;
        display: flex;
        justify-content: space-between;
        align-items: center;
        font-weight: bold;
    }

    .accordion-content {
        display: none;
        padding: 10px;
        border: 1px solid #ccc;
        border-top: 0;
        border-radius: 0 0 10px 10px;
    }

    .arrow {
        font-size: 14px;
        transition: transform 0.2s ease-in-out;
    }
    .accordion-item.show .accordion-content {
        display: block;
    }

    .accordion-item.show .arrow {
        transform: rotate(180deg);
    }



</style>

<script>
  @*Added by ST*@
    //$(function () {

    //    $('.summernote').summernote({
    //        height: 400,                 // set editor height
    //        minHeight: 350,             // set minimum height of editor
    //        maxHeight: null,             // set maximum  height of editor
    //        onblur: function (e) {
    //            $('#message').html($('.summernote').code());
    //        },
    //        callbacks: {
    //            onImageUpload: function (image) {
    //                uploadImage(image[0]);
    //            }
    //        }

    //    });
    //});
</script>

@using (Html.BeginForm("Sendemail", "EmailSendFrom", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    // hidden field to fetch the batch values in side controller
    @Html.HiddenFor(m => m.EmailBatchVal, new { id = "HiddenBatchVal" })
    @Html.HiddenFor(m => m.BatchEmailCount, new { id = "HiddenBatchEmailCount" })

    <label id="IsAuthenticated" style="display:none">@Request.IsAuthenticated</label>

    <div class="container main-ctn">
        <h1 class="title" style="display: flex; justify-content: space-between">
            Send Email Form
            <div>
                <a href="/EmailTemplate" class="btn btn-primary" id="lnkcreate">Email Template   <i class="fa fa-file" aria-hidden="true"></i></a>
                <a href="/EmailSendFrom/Index" class="btn btn-success" id="lnkcreate">Email Sender   <i class="fa fa-send" aria-hidden="true"></i></a>
                
            </div>
        </h1>
        <div class="admin-form" style="max-width: 820px">
            <div class="admin-ctn admin-ctnemail">
                @if (@ViewBag.message != null && @ViewBag.message.StartsWith("Error"))
                {
                    <div id="" class="alert alert-danger">@ViewBag.Message</div>
                }
                else if (@ViewBag.message != null)
                {
                    <div id="" class="alert alert-success">@ViewBag.Message</div>
                }
                <div class="col-sm-6 form-group">
                    <label>Lists</label>
                    @Html.DropDownList("ddlcitycircle", (IEnumerable<SelectListItem>)ViewData["CityCircle"], "Select List", new { name = "ddlcitycircle", @class = "form-control", id = "ddlcitycircle" })
                    <div id="" class="validateTips"></div>
                </div>
                <div class="col-sm-6 form-group">
                    <label>Biztype</label>
                    @Html.DropDownList("ddlbiztype", new SelectList(string.Empty, "Value", "Text"), "Select Biztype", new { name = "ddlbiztype", @class = "form-control", id = "ddlbiztype" })
                    <div id="" class="validateTips"></div>
                </div>
                <div class="col-sm-6 form-group">
                    <label>Title</label>
                    @Html.DropDownList("ddltitle", (IEnumerable<SelectListItem>)ViewData["Titlelist"], "Select Title", new { name = "ddltitle", @class = "form-control", id = "ddltitle" })
                    <div id="" class="validateTips"></div>
                </div>


                <div class="col-sm-6 form-group">
                    <label>Template Name</label>
                    @Html.DropDownList("ddltemplate", (IEnumerable<SelectListItem>)ViewData["Templatelist"], "Select template", new { name = "ddltemplate", @class = "form-control", id = "ddltemplate" })
                    <div id="" class="validateTips"></div>
                </div>
                @*Drop cown to select the batch values *@
                <div class="col-sm-6 form-group" id="BatchSelectingDropdownDiv">
                    <label>Batch</label>
                    <select class="form-control" id="SelectBunchValue">
                        <option value="1">Select batch</option>
                    </select>
                    <div id="" class="validateTips"></div>
                </div>

                <div class="col-sm-12 form-group">
                    <label>Subject</label>
                    @Html.TextBox("txtsubject", null, new { @class = "form-control", id = "txtsubject", name = "txtsubject" })
                    <div id="" class="validateTips"></div>
                </div>
                <div class="col-sm-12 form-group" id="divcount" style="height:auto;">
                    <label id="divcnt" class="lbl_count">&nbsp;</label>
                    @*@Html.TextBox("divcnt", null, new { @class = "form-control", id = "divcnt", name = "divcnt" ,@disabled="disabled"})*@
                </div>

                <div class="col-sm-12 form-group editorsample">
                    <label>Template Body</label>
                    @Html.TextAreaFor(x => x.EmailBody, new { @class = "ckeditor", @id = "CKEditorContent" })
                    @*@Html.TextArea("sampleEditor", new { @class = "ckeditor", @id = "sampleEditor" })@
            @Html.TextAreaFor(x => x.EmailBody, new { @class = "summernote", @id = "message", @maxlength = "2500", name = "sampleEditor" }) @*Added by ST*@
                    @*@Html.TextArea("sampleEditor", new { @class = "summernote", @id = "message", @maxlength = "2500", name = "sampleEditor" }) @*Added by ST*@
                    <div id="" class="validateTips"></div>
                </div>
                <div class="clearfix"></div>

                <div class="accordion">
                    <div class="accordion-item">
                        <div class="accordion-header">
                            Email Preview
                            <span class="arrow">&#9660;</span>
                        </div>
                        <div class="accordion-content">
                            <div id="ckeditorPreview"></div>
                        </div>
                    </div>
                </div>

                <div class="clearfix"></div>
                <h1 class="title">Write Sender's Email Id and Password below:-</h1>

                <div class="col-sm-6 form-group">
                    <label>Server Name</label>
                    @Html.TextBox("txtservername", null, new { @class = "form-control", id = "txtservername", name = "txtservername" })
                    <div id="" class="validateTips"></div>
                </div>
                <div class="col-sm-6 form-group">
                    <label>Email Addess</label>
                    @Html.TextBox("txtemail", null, new { @class = "form-control", id = "txtemail", name = "txtemail" })
                    <div id="" class="validateTips"></div>
                </div>
                <div class="col-sm-6 form-group">
                    <label>Password</label>
                    @Html.TextBox("txtpassword", null, new { @class = "form-control", id = "txtpassword", name = "txtpassword", @type = "text" })
                    <div id="" class="validateTips"></div>
                </div>
                <div class="col-sm-6 form-group">
                    <label>Port No</label>
                    @Html.TextBox("txtportno", null, new { @class = "form-control", id = "txtportno", name = "txtportno" })
                    <div id="" class="validateTips"></div>
                </div>
                <div class="col-sm-6 form-group">
                    <label>Enable SSL</label>
                    <select id="ddlenablessl" name="ddlenablessl" class="form-control">
                        <option value="0">No</option>
                        <option value="1">Yes</option>
                    </select>
                    <div id="" class="validateTips"></div>
                </div>

                <div class="col-sm-6 form-group">
                    <label>Spacing</label>
                    <select id="ddlspacing" name="ddlspacing" class="form-control">
                        <option value="0" selected disabled>Select Spacing</option>
                        <option value="10">10s</option>
                        <option value="15">15s</option>
                        <option value="20">20s</option>
                        <option value="25">25s</option>
                        <option value="30">30s</option>

                    </select>
                    <div id="" class="validateTips"></div>
                </div>
                <div class="col-sm-12 form-group">
                    <label></label>
                    <div class="divcreate">
                        <button type="submit" class="btn btn-success" id="btnsave" onclick="funcMyHtml();">Send Email </button>
                        @Html.Hidden("hiddenImageName", null, new { @class = "form-control", id = "hiddenImageName", name = "hiddenImageName" })
                    </div>
                    @*@Html.TextArea("txtTemphidden", null, new { @class = "form-control", id = "txtTemphidden", name = "txtTemphidden" })*@
                </div>
            </div>
        </div>
    </div>
}
<script src="https://cdn.ckeditor.com/4.22.1/full/ckeditor.js"></script>
<script>
    var editor = CKEDITOR.replace('CKEditorContent', {
        toolbar: [
            {
                name: 'basicstyles', items: ['Bold', 'Italic', 'Underline', 'RemoveFormat', 'Image', 'Link', 'Table', 'HorizontalRule',
                    'NumberedList', 'BulletedList', '-', 'JustifyLeft', 'JustifyCenter',
                    'JustifyRight', 'JustifyBlock', 'Maximize', 'Format', 'Font', 'FontSize']
            }
        ],
    });
    var css = `
    <style>
        .email-preview {font-family:'Roboto', sans-serif !important; color: #2f2f2f !imporatnt;}
        .email-preview h1{font-size:24px;font-weight:normal;line-height:1.1;margin-bottom:10px !important; color: #070707 !important}
        .email-preview h2{font-size:22px;font-weight:normal;line-height:1.1;margin-bottom:10px !important; color: #070707 !important}
        .email-preview h3{font-size:20px;font-weight:normal;line-height:1.1;margin-bottom:10px !important; color: #070707 !important}
        .email-preview h4{font-size:18px;font-weight:normal;line-height:1.1;margin-bottom:10px !important; color: #070707 !important}
        .email-preview h5,
        .email-preview p{font-size:16px;margin-bottom:10px !important;font-weight: 400;}
        .email-preview h6{font-size:14px;margin-bottom:10px !important}
        .email-preview ol,
        .email-preview ul{font-size:16px;margin:10px 0;padding-left:20px !important}
        .email-preview b,
        .email-preview strong{font-weight:700 !important}
        .email-preview address,
        .email-preview em,
        .email-preview i{font-style:italic !important}
        .email-preview u{text-decoration:underline !important}
        .email-preview div{margin:10px 0;padding:10px;border:1px solid #ccc !important}
    </style>`;

    editor.on('instanceReady', function () {
        var toolbarButtons = document.querySelectorAll('.cke_toolbar a');
        toolbarButtons.forEach(function (button) {
            button.addEventListener('click', function () {
                document.getElementById("ckeditorPreview").innerHTML = css + `<div class="email-preview">${editor.getData()}</div>`;
            });
        });
    });
    editor.on('change', function (event) {
        console.log(editor.getData())
        document.getElementById("ckeditorPreview").innerHTML = css + `<div class="email-preview">${editor.getData()}</div>`;
    });

    const accordionItems = document.querySelectorAll('.accordion-item');

    accordionItems.forEach(item => {
        const header = item.querySelector('.accordion-header');

        header.addEventListener('click', () => {
            accordionItems.forEach(otherItem => {
                if (otherItem !== item) {
                    otherItem.classList.remove('show');
                }
            });

            item.classList.toggle('show');
        });
    });

</script>
<style>
    a.cke_button[href="javascript:void('Image')"] {
        display: none;
    }
</style>